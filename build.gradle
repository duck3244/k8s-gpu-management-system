plugins {
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'jacoco'
}

group = 'com.k8s'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-scheduling'
    
    // Database
    implementation 'com.oracle.database.jdbc:ojdbc8:21.7.0.0'
    implementation 'com.zaxxer:HikariCP'
    
    // Swagger 3 (SpringDoc OpenAPI)
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.7.0'
    
    // Swagger 2 (기존 호환성 유지를 위해 선택적으로 사용)
    // implementation 'io.springfox:springfox-swagger2:3.0.0'
    // implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    // implementation 'io.springfox:springfox-boot-starter:3.0.0'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // MapStruct for DTO mapping
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    
    // JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // Micrometer for metrics
    implementation 'io.micrometer:micrometer-registry-prometheus'
    
    // Test dependencies
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'com.h2database:h2' // 테스트용 in-memory DB
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:oracle-xe'
    
    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

dependencyManagement {
    imports {
        mavenBom 'org.testcontainers:testcontainers-bom:1.19.3'
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

// JAR 빌드 설정
jar {
    enabled = false
    archiveClassifier = ''
}

// Spring Boot JAR 설정
bootJar {
    enabled = true
    archiveClassifier = ''
    mainClass = 'com.k8s.gpu.K8sGpuManagementApplication'
}

// 컴파일 옵션
compileJava {
    options.compilerArgs += [
        '-Amapstruct.defaultComponentModel=spring',
        '-Amapstruct.unmappedTargetPolicy=IGNORE'
    ]
}