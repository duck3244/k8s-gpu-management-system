version: '3.8'

services:
  # Oracle Database (개발용)
  oracle-db:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    container_name: k8s-gpu-oracle-dev
    environment:
      - ORACLE_PWD=OraclePassword123
      - ORACLE_CHARACTERSET=AL32UTF8
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - oracle-data:/opt/oracle/oradata
      - ./database/init:/container-entrypoint-initdb.d
    networks:
      - k8s-gpu-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "system/OraclePassword123@//localhost:1521/XE", "@/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 5

  # K8s GPU Management Application
  k8s-gpu-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: k8s-gpu-management-app
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:oracle:thin:@oracle-db:1521:XE
      - SPRING_DATASOURCE_USERNAME=gpu_admin
      - SPRING_DATASOURCE_PASSWORD=gpu_password
      - JAVA_OPTS=-Xmx2g -Xms1g
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs
    networks:
      - k8s-gpu-network
    depends_on:
      oracle-db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus (모니터링)
  prometheus:
    image: prom/prometheus:latest
    container_name: k8s-gpu-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - k8s-gpu-network
    restart: unless-stopped

  # Grafana (대시보드)
  grafana:
    image: grafana/grafana:latest
    container_name: k8s-gpu-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - k8s-gpu-network
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  oracle-data:
  prometheus-data:
  grafana-data:

networks:
  k8s-gpu-network:
    driver: bridge