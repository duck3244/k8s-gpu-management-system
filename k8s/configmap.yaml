apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-gpu-management-config
  namespace: k8s-gpu-management
  labels:
    app: k8s-gpu-management-system
data:
  application.yml: |
    server:
      port: 8080
      servlet:
        context-path: /api
    
    spring:
      application:
        name: k8s-gpu-management-system
      
      datasource:
        driver-class-name: oracle.jdbc.driver.OracleDriver
        url: jdbc:oracle:thin:@oracle-service:1521:xe
        username: gpu_admin
        password: ${DB_PASSWORD}
        hikari:
          connection-test-query: SELECT 1 FROM DUAL
          minimum-idle: 5
          maximum-pool-size: 20
          connection-timeout: 30000
          idle-timeout: 600000
          max-lifetime: 1800000
      
      jpa:
        database-platform: org.hibernate.dialect.Oracle12cDialect
        hibernate:
          ddl-auto: validate
          naming:
            physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        show-sql: false
        properties:
          hibernate:
            format_sql: false
            use_sql_comments: false
            jdbc:
              batch_size: 20
            order_inserts: true
            order_updates: true
      
      batch:
        job:
          enabled: false
        initialize-schema: never
      
      jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: Asia/Seoul
    
    # Logging
    logging:
      level:
        com.k8s.gpu: INFO
        org.springframework.batch: WARN
        org.hibernate.SQL: WARN
        org.springframework.web: WARN
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    
    # Management endpoints
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          show-details: always
    
    # Custom application properties
    app:
      gpu:
        metrics:
          collection:
            interval: 60000
            batch-size: 100
        alert:
          evaluation:
            interval: 300000
        optimization:
          schedule: "0 */30 * * * *"
      
      batch:
        metrics-collection:
          chunk-size: 100
          thread-pool-size: 5